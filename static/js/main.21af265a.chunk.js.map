{"version":3,"sources":["styles/global.ts","styles/themes/dark.ts","styles/themes/light.ts","styles/themes/index.ts","context/themeContext.tsx","components/Header/style.ts","components/Header/Header.tsx","pages/about/style.ts","pages/about/About.tsx","pages/home/Particle.js","pages/home/style.ts","pages/home/Home.tsx","pages/Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["createGlobalStyle","props","theme","colors","background","text","fontSizes","small","dark","title","primary","secundary","header","light","defaultTheme","medium","large","extraLarge","combineTheme","ThemeContext","React","toogleTheme","ThemeContextProvider","children","setTheme","Provider","value","HeaderDiv","styled","div","Nav","Header","useContext","checked","onChange","StyledAbout","About","style","height","speed","Particle","width","params","fps_limit","particles","collisions","enable","number","density","value_area","line_linked","distance","opacity","move","anim","opacity_min","sync","polygon","scale","type","radius","url","inline","arrangement","draw","stroke","color","retina_detect","interactivity","events","onhover","mode","modes","bubble","size","CenterDiv","NameSpan","span","StyledHome","Home","useState","isTypingDone","setTypingDone","transitions","useTransition","from","enter","leave","reverse","delay","styles","item","onFinishedTyping","Router","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21af265a.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  outline: 0;\n}\n\nbody {\n  background: ${(props) => props.theme.colors.background};\n  color: ${(props) => props.theme.colors.text};\n  font-size: ${(props) => props.theme.fontSizes.small}};\n}\n\nh1, h2, h3, h4, h5, h6, strong {\n  font-weight: 700;\n}\n\nbutton {\n  cursor: pointer;\n}\n`;\n","const dark = {\n  title: 'dark',\n\n  colors: {\n    primary: '#04c2c9',\n    secundary: '#555',\n    background: '#333',\n    text: '#fff',\n    header: '#1b242f'\n  }\n};\n\nexport default dark;\n","const light = {\n  title: 'light',\n\n  colors: {\n    primary: '#04c2c9',\n    secundary: '#777',\n    background: '#fff',\n    text: '#333',\n    header: '#1b242f'\n  }\n};\n\nexport default light;\n","import { CustomTheme, DefaultTheme } from 'styled-components';\nimport dark from './dark';\nimport light from './light';\n\nconst defaultTheme = {\n  fontSizes: {\n    small: '16px',\n    medium: '18px',\n    large: '20px',\n    extraLarge: '35px'\n  }\n};\n\nfunction combineTheme(theme: CustomTheme): DefaultTheme {\n  return { ...defaultTheme, ...theme };\n}\n\nexport { combineTheme, dark, light };\n","import * as React from 'react';\nimport { DefaultTheme, ThemeProvider } from 'styled-components';\nimport GlobalStyles from '../styles/global';\nimport { combineTheme, dark, light } from '../styles/themes';\nimport { ThemeContextType } from './type';\n\nexport const ThemeContext = React.createContext<ThemeContextType>({\n  theme: combineTheme(dark),\n  toogleTheme: () => null\n});\n\nconst ThemeContextProvider: React.FC = ({ children }) => {\n  const [theme, setTheme] = React.useState<DefaultTheme>(combineTheme(dark));\n\n  const toogleTheme = () => {\n    setTheme(\n      theme.title === 'light' ? combineTheme(dark) : combineTheme(light)\n    );\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme: theme, toogleTheme: toogleTheme }}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyles />\n        {children}\n      </ThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContextProvider;\n","import styled from 'styled-components';\n\nexport const HeaderDiv = styled.div`\n  background: ${(props) => props.theme.colors.header};\n  color: #fdfdfd;\n  font-size: 1.2rem;\n  padding: 1rem 1.5rem;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const Nav = styled.div`\n  display: flex;\n  margin-right: 1vh;\n\n  div {\n    margin-left: 1vh;\n    margin-right: 1vh;\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport Switch from 'react-switch';\nimport { HeaderDiv, Nav } from './style';\nimport { ThemeContext } from '../../context/themeContext';\n\nconst Header: React.FC = () => {\n  const { toogleTheme, theme } = React.useContext(ThemeContext);\n\n  return (\n    <HeaderDiv>\n      <Nav>\n        <div>Home</div>\n        <div>About</div>\n        <div>Contact</div>\n      </Nav>\n      <Switch checked={theme.title !== 'light'} onChange={toogleTheme} />\n    </HeaderDiv>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const StyledAbout = styled.div`\n  height: 100vh;\n  padding-top: 10vh;\n`;\n","import { Parallax } from 'react-parallax';\nimport Typing from 'react-typing-animation';\nimport { StyledAbout } from './style';\n\nconst About: React.FC = () => {\n  return (\n    <Parallax>\n      <StyledAbout>\n        <div style={{ height: 500 }}>\n          <Typing speed={20}>\n            <div>\n              Hi, welcome to my website! My name is Esdras Xavier and I'm a full\n              stack developer.\n            </div>\n            <div>\n              One of my 2021 goals is to become expert in Java with Spring Boot\n              and microservices.\n            </div>\n          </Typing>\n        </div>\n      </StyledAbout>\n    </Parallax>\n  );\n};\n\nexport default About;\n","import Particles from 'react-particles-js';\n\nconst Particle = () => {\n  return (\n    <Particles\n      width=\"100%\"\n      height=\"100vh\"\n      params={{\n        fps_limit: 28,\n        particles: {\n          collisions: {\n            enable: false\n          },\n          number: {\n            value: 120,\n            density: {\n              enable: false,\n              value_area: 2\n            }\n          },\n          line_linked: {\n            enable: true,\n            distance: 30,\n            opacity: 0.4\n          },\n          move: {\n            speed: .2\n          },\n          opacity: {\n            anim: {\n              enable: true,\n              opacity_min: 0.05,\n              speed: 1,\n              sync: false\n            },\n            value: 0.4\n          }\n        },\n        polygon: {\n          enable: true,\n          scale: 0.8,\n          type: 'inline',\n          move: {\n            radius: 15\n          },\n          url: '/assets/img/small-deer.svg',\n          inline: {\n            arrangement: 'equidistant'\n          },\n          draw: {\n            enable: true,\n            stroke: {\n              color: 'rgba(255, 255, 255, .2)'\n            }\n          }\n        },\n        retina_detect: false,\n        interactivity: {\n          events: {\n            onhover: {\n              enable: true,\n              mode: 'bubble'\n            }\n          },\n          modes: {\n            bubble: {\n              size: 6,\n              distance: 40\n            }\n          }\n        }\n      }}\n    />\n  );\n};\n\nexport default Particle;\n","import styled from 'styled-components';\n\nexport const CenterDiv = styled.div`\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n  height: 100px;\n  text-align: center;\n  font-size: ${(props) => props.theme.fontSizes.extraLarge}};\n`;\n\nexport const NameSpan = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n`;\n\nexport const StyledHome = styled.div`\n  height: 100vh;\n`;\n","import { useState } from 'react';\nimport { Parallax } from 'react-parallax';\nimport Typing from 'react-typing-animation';\nimport Particle from './Particle';\nimport { CenterDiv, NameSpan, StyledHome } from './style';\nimport { animated, useTransition } from 'react-spring';\nconst Home: React.FC = () => {\n  const [isTypingDone, setTypingDone] = useState<boolean>(false);\n  const transitions = useTransition(isTypingDone, {\n    from: { opacity: 0 },\n    enter: { opacity: .4 },\n    leave: { opacity: 0 },\n    reverse: isTypingDone,\n    delay: 100\n  });\n\n  return (\n    <Parallax>\n      {transitions(\n        (styles, item) =>\n          item && (\n            <animated.div style={styles}>\n              <Particle />\n            </animated.div>\n          )\n      )}\n      {!isTypingDone && <StyledHome />}\n\n      <CenterDiv>\n        <Typing onFinishedTyping={() => setTypingDone(true)} speed={50}>\n          <div>\n            Hello! My name is <NameSpan>Esdras Xavier.</NameSpan>\n          </div>\n          <div>I'm a full-stack developer.</div>\n        </Typing>\n      </CenterDiv>\n    </Parallax>\n  );\n};\n\nexport default Home;\n","import { BrowserRouter } from 'react-router-dom';\nimport Header from '../components/Header/Header';\nimport About from './about/About';\nimport Home from './home/Home';\n\nconst Router: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Home />\n      <Header />\n      <About />\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import ThemeContextProvider from './context/themeContext';\nimport Router from './pages/Router';\n\nfunction App() {\n  return (\n    <ThemeContextProvider>\n      <Router />\n    </ThemeContextProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}